// Automatically generated by flapigen
package com.onee.rusty.glue;
import androidx.annotation.NonNull;

public final class CollectionValue {

    private CollectionValue() {}

    public final ValueType property_type() {
        int ret = do_property_type(mNativeObj);
        ValueType convRet = ValueType.fromInt(ret);

        return convRet;
    }
    private static native int do_property_type(long self);

    public final boolean as_bool() {
        boolean ret = do_as_bool(mNativeObj);

        return ret;
    }
    private static native boolean do_as_bool(long self);

    public final @NonNull String as_string() {
        String ret = do_as_string(mNativeObj);

        return ret;
    }
    private static native @NonNull String do_as_string(long self);

    public final @NonNull CollectionMap as_map() {
        long ret = do_as_map(mNativeObj);
        CollectionMap convRet = new CollectionMap(InternalPointerMarker.RAW_PTR, ret);

        return convRet;
    }
    private static native long do_as_map(long self);

    public final @NonNull CollectionList as_array() {
        long ret = do_as_array(mNativeObj);
        CollectionList convRet = new CollectionList(InternalPointerMarker.RAW_PTR, ret);

        return convRet;
    }
    private static native long do_as_array(long self);

    public final double as_number() {
        double ret = do_as_number(mNativeObj);

        return ret;
    }
    private static native double do_as_number(long self);

    public synchronized void delete() {
        if (mNativeObj != 0) {
            do_delete(mNativeObj);
            mNativeObj = 0;
       }
    }
    @Override
    protected void finalize() throws Throwable {
        try {
            delete();
        }
        finally {
             super.finalize();
        }
    }
    private static native void do_delete(long me);
    /*package*/ CollectionValue(InternalPointerMarker marker, long ptr) {
        assert marker == InternalPointerMarker.RAW_PTR;
        this.mNativeObj = ptr;
    }
    /*package*/ long mNativeObj;

  public Object getValue() {
      switch (property_type()) {
          case Null:
              return null;
          case Number:
              return as_number();
          case Boolean:
              return as_bool();
          case String:
              return as_string();
          case Map:
              return as_map();
          case Array:
              return as_array();
          default:
              throw new IllegalStateException("Unexpected value: " + property_type());
      }
  }
  }