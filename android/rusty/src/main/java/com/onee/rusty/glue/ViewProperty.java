// Automatically generated by flapigen
package com.onee.rusty.glue;
import androidx.annotation.NonNull;

public final class ViewProperty {

    private ViewProperty() {}

    public final double width() {
        double ret = do_width(mNativeObj);

        return ret;
    }
    private static native double do_width(long self);

    public final double height() {
        double ret = do_height(mNativeObj);

        return ret;
    }
    private static native double do_height(long self);

    public final double marginLeft() {
        double ret = do_marginLeft(mNativeObj);

        return ret;
    }
    private static native double do_marginLeft(long self);

    public final double marginRight() {
        double ret = do_marginRight(mNativeObj);

        return ret;
    }
    private static native double do_marginRight(long self);

    public final double marginTop() {
        double ret = do_marginTop(mNativeObj);

        return ret;
    }
    private static native double do_marginTop(long self);

    public final double marginBottom() {
        double ret = do_marginBottom(mNativeObj);

        return ret;
    }
    private static native double do_marginBottom(long self);

    public final int flex() {
        int ret = do_flex(mNativeObj);

        return ret;
    }
    private static native int do_flex(long self);

    public final Display display() {
        int ret = do_display(mNativeObj);
        Display convRet = Display.fromInt(ret);

        return convRet;
    }
    private static native int do_display(long self);

    public final FlexDirection flexDirection() {
        int ret = do_flexDirection(mNativeObj);
        FlexDirection convRet = FlexDirection.fromInt(ret);

        return convRet;
    }
    private static native int do_flexDirection(long self);

    public final int backgroundColor() {
        int ret = do_backgroundColor(mNativeObj);

        return ret;
    }
    private static native int do_backgroundColor(long self);

    public final FlexWrap flexWrap() {
        int ret = do_flexWrap(mNativeObj);
        FlexWrap convRet = FlexWrap.fromInt(ret);

        return convRet;
    }
    private static native int do_flexWrap(long self);

    public synchronized void delete() {
        if (mNativeObj != 0) {
            do_delete(mNativeObj);
            mNativeObj = 0;
       }
    }
    @Override
    protected void finalize() throws Throwable {
        try {
            delete();
        }
        finally {
             super.finalize();
        }
    }
    private static native void do_delete(long me);
    /*package*/ ViewProperty(InternalPointerMarker marker, long ptr) {
        assert marker == InternalPointerMarker.RAW_PTR;
        this.mNativeObj = ptr;
    }
    /*package*/ long mNativeObj;
}